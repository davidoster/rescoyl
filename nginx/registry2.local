upstream docker-registry {
  # This line will be replaced by the integration.sh script.
  server  172.17.0.38:5000;
}

map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
  'registry/2.0' '';
  default registry/2.0;
}

server {
  listen  443;
  server_name registry.local;

  ssl on;
  ssl_certificate self-certificate.crt;
  ssl_certificate_key self-private.key;

  # disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 0;

  proxy_set_header Host           $host;
  proxy_set_header X-Real-IP      $remote_addr;
  proxy_set_header Authorization  "";

  # avoid HTTP 411
  chunked_transfer_encoding on;

  location / {
    proxy_pass  http://docker-registry;
  }

  location /v1 {
    auth_basic "Private registry";
    auth_basic_user_file /etc/nginx/registry.passwd;
    proxy_pass  http://docker-registry;
  }

  location /v1/_ping {
    proxy_pass  http://docker-registry;
  }

  location /v1/users {
    proxy_pass  http://docker-registry;
  }

  location /v2 {
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      return 404;
    }
    #auth_basic "Private registry";
    #auth_basic_user_file /etc/nginx/registry.passwd;
    add_header 'Docker-Distribution-Api-Version' 'registry/2.0';
    proxy_pass  http://docker-registry;
    proxy_set_header  Host              $http_host; # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
  }
}
